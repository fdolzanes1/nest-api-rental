// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  Car         Car[]

  @@map("categories")
}

model Car {
  id             Int                  @id @default(autoincrement())
  name           String
  description    String
  dailyRate      Int
  available      Boolean              @default(true)
  licensePlate   String
  fineAmount     Int
  brand          String
  category       Category             @relation(fields: [categoryId], references: [id])
  categoryId     Int
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @default(now())
  specifications CarsSpecifications[]
  rentals        Rental[]

  @@map("cars")
}

model Specification {
  id          Int                  @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @default(now())
  cars        CarsSpecifications[]

  @@map("specifications")
}

model CarsSpecifications {
  car             Car           @relation(fields: [carId], references: [id])
  carId           Int
  specification   Specification @relation(fields: [specificationId], references: [id])
  specificationId Int

  @@id([carId, specificationId])
  @@map("cars_specifications")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  password      String
  email         String   @unique
  driverLicense String
  avatar        String
  roleId        Int
  roles         Role     @relation(fields: [roleId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  rentals       Rental[]

  @@map("users")
}

model Rental {
  car       Car      @relation(fields: [carId], references: [id])
  carId     Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  startDate DateTime
  endDate   DateTime
  total     Int

  @@id([carId, userId])
  @@map("rentals")
}

model Role {
  id              Int              @id @default(autoincrement())
  name            String
  users           User[]
  permissionRoles PermissionRole[]

  @@map("roles")
}

model Permission {
  id              Int              @id @default(autoincrement())
  name            String
  method          String
  path            String
  module          String
  permissionRoles PermissionRole[]

  @@map("permissions")
}

model PermissionRole {
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@id([roleId, permissionId])
  @@map("permission_roles")
}
